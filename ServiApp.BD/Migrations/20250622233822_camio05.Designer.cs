// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServiApp.BD.Datos;

#nullable disable

namespace ServiApp.BD.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250622233822_camio05")]
    partial class camio05
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ServiApp.BD.Datos.Entidades.Calificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCalificacion")
                        .HasMaxLength(100)
                        .HasColumnType("datetime2");

                    b.Property<int>("IDCalificacion")
                        .HasColumnType("int");

                    b.Property<int>("IdSolicitud")
                        .HasColumnType("int");

                    b.Property<int>("Puntuacion")
                        .HasColumnType("int");

                    b.Property<int?>("SolicitudId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SolicitudId");

                    b.ToTable("Calificacion");
                });

            modelBuilder.Entity("ServiApp.BD.Datos.Entidades.Pago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Comision")
                        .HasMaxLength(42)
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasMaxLength(42)
                        .HasColumnType("bit");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("datetime2");

                    b.Property<int>("IDPago")
                        .HasColumnType("int");

                    b.Property<string>("MetodoPago")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MontoTotal")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("ServiApp.BD.Datos.Entidades.Prestador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Emial")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<int>("IDnumberoMatricula")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Validado")
                        .HasMaxLength(64)
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Prestadores");
                });

            modelBuilder.Entity("ServiApp.BD.Datos.Entidades.PrestadorServicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<int>("IdPrestador")
                        .HasColumnType("int");

                    b.Property<int>("IdServicio")
                        .HasColumnType("int");

                    b.Property<int?>("PrestadorId")
                        .HasColumnType("int");

                    b.Property<int?>("ServicioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PrestadorId");

                    b.HasIndex("ServicioId");

                    b.ToTable("PrestadorServicio");
                });

            modelBuilder.Entity("ServiApp.BD.Datos.Entidades.Servico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<int>("FechaRegistro")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<int>("IDServicio")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Servicos");
                });

            modelBuilder.Entity("ServiApp.BD.Datos.Entidades.Solicitud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Estado")
                        .HasMaxLength(100)
                        .HasColumnType("bit");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha_solicitud")
                        .HasColumnType("datetime2");

                    b.Property<int>("IDSolicitud")
                        .HasColumnType("int");

                    b.Property<int>("IdPrestador")
                        .HasColumnType("int");

                    b.Property<int>("IdServico")
                        .HasColumnType("int");

                    b.Property<int>("IdUsaurio")
                        .HasColumnType("int");

                    b.Property<int?>("PrestadorId")
                        .HasColumnType("int");

                    b.Property<int?>("ServicioId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuariosId")
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("Id");

                    b.HasIndex("PrestadorId");

                    b.HasIndex("ServicioId");

                    b.HasIndex("UsuariosId");

                    b.ToTable("Solicitudes");
                });

            modelBuilder.Entity("ServiApp.BD.Datos.Entidades.Usuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(42)
                        .HasColumnType("nvarchar(42)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(42)
                        .HasColumnType("nvarchar(42)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaRegistroUsuario")
                        .HasMaxLength(64)
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ServiApp.BD.Datos.Entidades.Calificacion", b =>
                {
                    b.HasOne("ServiApp.BD.Datos.Entidades.Solicitud", "Solicitud")
                        .WithMany()
                        .HasForeignKey("SolicitudId");

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("ServiApp.BD.Datos.Entidades.PrestadorServicio", b =>
                {
                    b.HasOne("ServiApp.BD.Datos.Entidades.Prestador", "Prestador")
                        .WithMany()
                        .HasForeignKey("PrestadorId");

                    b.HasOne("ServiApp.BD.Datos.Entidades.Servico", "Servicio")
                        .WithMany()
                        .HasForeignKey("ServicioId");

                    b.Navigation("Prestador");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("ServiApp.BD.Datos.Entidades.Solicitud", b =>
                {
                    b.HasOne("ServiApp.BD.Datos.Entidades.Prestador", "Prestador")
                        .WithMany()
                        .HasForeignKey("PrestadorId");

                    b.HasOne("ServiApp.BD.Datos.Entidades.Servico", "Servicio")
                        .WithMany()
                        .HasForeignKey("ServicioId");

                    b.HasOne("ServiApp.BD.Datos.Entidades.Usuarios", "Usuarios")
                        .WithMany()
                        .HasForeignKey("UsuariosId");

                    b.Navigation("Prestador");

                    b.Navigation("Servicio");

                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
