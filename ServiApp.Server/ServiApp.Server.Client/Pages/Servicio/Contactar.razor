@page "/contactar/{ServicioId:int}"
@inject NavigationManager nav
@inject IHttpServicio http
@rendermode InteractiveServer
@using System.ComponentModel.DataAnnotations

<PageTitle>Contactar Prestador</PageTitle>
<link rel="stylesheet" href="css/servicios.css" />
<div class="page-background"></div>
<div class="container mt-4 position-relative" style="z-index: 2; padding-bottom: 2rem;">
    @if (cargando)
    {
        <div class="text-center mt-5">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Cargando...</span>
            </div>
            <p class="mt-2">Cargando información del servicio...</p>
        </div>
    }
    else if (servicio == null)
    {
        <div class="alert alert-warning text-center" role="alert">
            <i class="bi bi-exclamation-triangle"></i> No se pudo cargar la información del servicio.
            <div class="mt-3">
                <button class="btn btn-primary" @onclick="VolverAServicios">
                    <i class="bi bi-arrow-left"></i> Volver a Servicios
                </button>
            </div>
        </div>
    }
    else
    {
        <div class="row justify-content-center">
            <div class="col-md-8 col-lg-6">
                <div class="card shadow">
                    <div class="card-header bg-primary text-white">
                        <h4 class="mb-0">
                            <i class="bi bi-envelope"></i> Contactar Prestador
                        </h4>
                    </div>
                    <div class="card-body">
                        @if (mensajeEnviado)
                        {
                            <div class="alert alert-success" role="alert">
                                <i class="bi bi-check-circle"></i> ¡Mensaje enviado correctamente!
                                <br />
                                <small>El prestador recibirá tu consulta y se pondrá en contacto contigo.</small>
                            </div>
                            <div class="text-center mt-3">
                                <button class="btn btn-primary" @onclick="VolverAServicios">
                                    <i class="bi bi-arrow-left"></i> Volver a Servicios
                                </button>
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-info mb-3">
                                <p class="mb-1"><strong>Servicio:</strong> @servicio.Nombre</p>
                                <p class="mb-1"><strong>Prestador:</strong> @servicio.NombrePrestador</p>
                                <p class="mb-0"><strong>Precio:</strong> $@servicio.PrecioBase</p>
                            </div>

                            <EditForm Model="@formulario" OnValidSubmit="EnviarMensaje">
                                <DataAnnotationsValidator />
                                <ValidationSummary class="text-danger" />

                                <div class="mb-3">
                                    <label class="form-label fw-semibold">
                                        <i class="bi bi-person"></i> Tu Nombre *
                                    </label>
                                    <InputText @bind-Value="formulario.Nombre"
                                               class="form-control"
                                               placeholder="Ingresa tu nombre completo" />
                                    <ValidationMessage For="@(() => formulario.Nombre)" />
                                </div>

                                <div class="mb-3">
                                    <label class="form-label fw-semibold">
                                        <i class="bi bi-envelope"></i> Tu Email *
                                    </label>
                                    <InputText @bind-Value="formulario.Email"
                                               class="form-control"
                                               type="email"
                                               placeholder="ejemplo@correo.com" />
                                    <ValidationMessage For="@(() => formulario.Email)" />
                                </div>

                                <div class="mb-3">
                                    <label class="form-label fw-semibold">
                                        <i class="bi bi-telephone"></i> Tu Teléfono *
                                    </label>
                                    <InputText @bind-Value="formulario.Telefono"
                                               class="form-control"
                                               placeholder="Ej: +54 9 11 1234-5678" />
                                    <ValidationMessage For="@(() => formulario.Telefono)" />
                                </div>

                                <div class="mb-3">
                                    <label class="form-label fw-semibold">
                                        <i class="bi bi-chat-left-text"></i> Mensaje *
                                    </label>
                                    <InputTextArea @bind-Value="formulario.Mensaje"
                                                   class="form-control"
                                                   rows="5"
                                                   placeholder="Describe tu consulta o requerimiento..." />
                                    <ValidationMessage For="@(() => formulario.Mensaje)" />
                                </div>

                                <div class="d-flex gap-2">
                                    <button type="submit" class="btn btn-primary flex-grow-1" disabled="@enviando">
                                        @if (enviando)
                                        {
                                            <span class="spinner-border spinner-border-sm me-2"></span>
                                            <span>Enviando...</span>
                                        }
                                        else
                                        {
                                            <i class="bi bi-send"></i>
                                            <span> Enviar Mensaje</span>
                                        }
                                    </button>
                                    <button type="button" class="btn btn-outline-secondary" @onclick="VolverAServicios">
                                        <i class="bi bi-x-circle"></i> Cancelar
                                    </button>
                                </div>
                            </EditForm>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    [Parameter]
    public int ServicioId { get; set; }

    private ServicioDTO? servicio;
    private ContactoFormulario formulario = new();
    private bool cargando = true;
    private bool enviando = false;
    private bool mensajeEnviado = false;

    protected override async Task OnInitializedAsync()
    {
        await CargarServicio();
    }

    private async Task CargarServicio()
    {
        cargando = true;
        try
        {
            var response = await http.Get<ServicioDTO>($"api/servicioController/{ServicioId}");

            if (!response.Error && response.Respuesta != null)
            {
                servicio = response.Respuesta;
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error al cargar servicio: {ex.Message}");
        }
        finally
        {
            cargando = false;
        }
    }

    private async Task EnviarMensaje()
    {
        enviando = true;

        await Task.Delay(1500);

        mensajeEnviado = true;
        enviando = false;
    }

    private void VolverAServicios()
    {
        nav.NavigateTo("/servicios");
    }

    public class ContactoFormulario
    {
        [Required(ErrorMessage = "El nombre es obligatorio")]
        [StringLength(100, ErrorMessage = "El nombre no puede exceder 100 caracteres")]
        public string Nombre { get; set; } = string.Empty;

        [Required(ErrorMessage = "El email es obligatorio")]
        [EmailAddress(ErrorMessage = "Formato de email inválido")]
        public string Email { get; set; } = string.Empty;

        [Required(ErrorMessage = "El teléfono es obligatorio")]
        [Phone(ErrorMessage = "Formato de teléfono inválido")]
        public string Telefono { get; set; } = string.Empty;

        [Required(ErrorMessage = "El mensaje es obligatorio")]
        [StringLength(1000, MinimumLength = 10, ErrorMessage = "El mensaje debe tener entre 10 y 1000 caracteres")]
        public string Mensaje { get; set; } = string.Empty;
    }
}