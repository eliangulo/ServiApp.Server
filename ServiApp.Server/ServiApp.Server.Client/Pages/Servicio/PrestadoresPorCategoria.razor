@page "/prestadores/categoria/{CategoriaId:int}"
@inject IHttpServicio http
@inject NavigationManager nav
@rendermode InteractiveServer

<link rel="stylesheet" href="css/servicios.css" />
<div class="page-background"></div>

<div class="container position-relative" style="z-index: 2; padding-top: 2rem; padding-bottom: 2rem;">
    <h3>Prestadores - Categoría @CategoriaId</h3>
    <div class="mb-3">
        <button class="btn btn-secondary" @onclick="VolverACategorias">
            ← Volver a Categorías
        </button>
    </div>
    @if (prestadores == null)
    {
        <div class="text-center">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Cargando...</span>
            </div>
            <p>Buscando prestadores...</p>
        </div>
    }
    else if (prestadores.Count == 0)
    {
        <div class="alert alert-warning" role="alert">
            No se encontraron prestadores para esta categoría.
        </div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Matrícula</th>
                        <th>Nombre</th>
                        <th>Apellido</th>
                        <th>Email</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var prestador in prestadores)
                    {
                        <tr>
                            <td>@prestador.Id</td>
                            <td>@prestador.IDnumberoMatricula</td>
                            <td>@prestador.NombrePrestador</td>
                            <td>@prestador.Apellido</td>
                            <td>@prestador.Email</td>
                            <td>
                                <button class="btn btn-sm btn-info"
                                        @onclick="() => VerDetallePrestador(prestador.Id)">
                                    Ver Detalle
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

@code {
    [Parameter]
    public int CategoriaId { get; set; }
    private List<PrestadorDTO>? prestadores;
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await CargarPrestadores();
    }
    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
        await CargarPrestadores();
    }
    private async Task CargarPrestadores()
    {
        prestadores = null; // Mostrar loading
        var response = await http.Get<List<PrestadorDTO>>($"api/prestador/categoria/{CategoriaId}");
        if (!response.Error && response.Respuesta != null)
        {
            prestadores = response.Respuesta;
        }
        else
        {
            prestadores = new List<PrestadorDTO>();
        }
    }
    private void VerDetallePrestador(int prestadorId)
    {
        nav.NavigateTo($"/prestador/{prestadorId}");
    }
    private void VolverACategorias()
    {
        nav.NavigateTo("/categorias");
    }
}