@page "/prestadores/categoria/{CategoriaId:int}"
@inject IHttpServicio http
@inject NavigationManager nav
@rendermode InteractiveServer

<PageTitle>Prestadores por Categoría</PageTitle>
<link rel="stylesheet" href="css/servicios.css" />

<div class="page-background"></div>
<div class="container position-relative" style="z-index: 2; padding-top: 2rem; padding-bottom: 2rem;">
    <h3 class="mb-4 text-primary fw-bold">Prestadores - Categoría</h3>

    <div class="mb-4">
        <button class="btn btn-outline-secondary" @onclick="VolverACategorias">
            <i class="bi bi-arrow-left"></i> Volver a Categorías
        </button>
    </div>

    @if (prestadores == null)
    {
        <div class="text-center mt-5">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Cargando...</span>
            </div>
            <p class="mt-2">Cargando prestadores...</p>
        </div>
    }
    else if (prestadores.Count == 0)
    {
        <div class="alert alert-info text-center mt-4" role="alert">
            No se encontraron prestadores para esta categoría.
        </div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead class="table-primary">
                    <tr>
                        <th>Id</th>
                        <th>Matrícula</th>
                        <th>Nombre</th>
                        <th>Apellido</th>
                        <th>Email</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var prestador in prestadores)
                    {
                        <tr>
                            <td>@prestador.Id</td>
                            <td>@prestador.IDnumberoMatricula</td>
                            <td>@prestador.NombrePrestador</td>
                            <td>@prestador.Apellido</td>
                            <td>@prestador.Email</td>
                            <td>
                                <button class="btn btn-success btn-sm"
                                        style="padding: 6px 20px; font-size: 0.9rem; border-radius: 5px;"
                                        @onclick="() => ContactarPrestador(prestador.Id)">
                                    <i class="bi bi-envelope me-1"></i>Contactar
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

@code {
    [Parameter]
    public int CategoriaId { get; set; }

    private List<PrestadorDTO>? prestadores;

    protected override async Task OnInitializedAsync()
    {
        await CargarPrestadores();
    }

    protected override async Task OnParametersSetAsync()
    {
        await CargarPrestadores();
    }

    private async Task CargarPrestadores()
    {
        prestadores = null;
        var response = await http.Get<List<PrestadorDTO>>($"api/prestador/categoria/{CategoriaId}");

        if (!response.Error && response.Respuesta != null)
        {
            prestadores = response.Respuesta;
        }
        else
        {
            prestadores = new List<PrestadorDTO>();
        }
    }

    private void ContactarPrestador(int prestadorId)
    {
        // Redirige a una página que muestre los servicios del prestador
        nav.NavigateTo($"/prestador/servicios/{prestadorId}");
    }

    private void VolverACategorias()
    {
        nav.NavigateTo("/categorias");
    }
}