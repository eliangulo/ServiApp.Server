@page "/servicios"
@inject IHttpServicio http
@inject NavigationManager nav
@rendermode InteractiveServer

<h3>Servicios Disponibles</h3>

<div class="filtros mb-3">
    <button class="btn btn-primary" @onclick="MostrarTodos">Mostrar Todos</button>
    <button class="btn btn-primary ms-2" @onclick="IrABuscarPorCategoria">Buscar por Categoría</button>
</div>

@if (servicios == null)
{
    <div class="text-center">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Cargando...</span>
        </div>
        <p>Cargando servicios...</p>
    </div>
}
else if (servicios.Count == 0)
{
    <div class="alert alert-info" role="alert">
        No se encontraron servicios.
    </div>
}
else
{
    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Nombre</th>
                    <th>Descripción</th>
                    <th>Prestador</th>
                    <th>Ubicación</th>
                    <th>Precio</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var servicio in servicios)
                {
                    <tr>
                        <td>@servicio.Id</td>
                        <td>@servicio.Nombre</td>
                        <td>@servicio.Descripcion</td>
                        <td>@servicio.NombrePrestador</td>
                        <td>@servicio.Ubicacion</td>
                        <td>$@servicio.PrecioBase</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    private List<ServicioDTO>? servicios;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await CargarServicios();
    }

    private async Task CargarServicios()
    {
        var response = await http.Get<List<ServicioDTO>>("api/servicioController");
        if (!response.Error && response.Respuesta != null)
        {
            servicios = response.Respuesta;
        }
        else
        {
            servicios = new List<ServicioDTO>();
        }
    }

    private async Task MostrarTodos()
    {
        servicios = null;
        await CargarServicios();
    }

    private void IrABuscarPorCategoria()
    {
        nav.NavigateTo("/categorias");
    }
}
